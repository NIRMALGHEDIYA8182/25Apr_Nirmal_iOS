i. Convert Temperature Celsius into Fahrenheit:
(1.) Convert temperature fahrenheit to Celsius:
#include <stdio.h>

int main() {
    // Declare variables
    float fahrenheit, celsius;

    // Get temperature in Fahrenheit from the user
    printf("Enter temperature in Fahrenheit: ");
    scanf("%f", &fahrenheit);

    // Convert Fahrenheit to Celsius using the formula: C = (F - 32) * 5/9
    celsius = (fahrenheit - 32) * 5.0/9.0;

    // Display the result
    printf("Temperature in Celsius: %.2f\n", celsius);

    return 0;
}

(2.) Convert days into months:
#include <stdio.h>

int main() {
    int days;
    
    // Get input from the user
    printf("Enter the number of days: ");
    scanf("%d", &days);
    
    // Convert days to months (assuming 30 days per month)
    int months = days / 30;
    int remainingDays = days % 30;
    
    // Display the result
    printf("%d days is approximately %d months and %d days.\n", days, months, remainingDays);

    return 0;
}
(3.) Convert years into days and months
#include <stdio.h>

void convertYearsToDaysMonths(int years, int *days, int *months) {
    *days = years * 365; // Assuming a non-leap year has 365 days

    // Simple calculation for months, assuming an average of 30.44 days per month
    *months = years * 12;
}

int main() {
    int years, days, months;

    // Get input from the user
    printf("Enter the number of years: ");
    scanf("%d", &years);

    // Perform the conversion
    convertYearsToDaysMonths(years, &days, &months);

    // Display the result
    printf("%d years is equal to %d days and %d months.\n", years, days, months);

    return 0;
}
(4.) Convert minutes into seconds and hours
#include <stdio.h>

int main() {
    int minutes;
    printf("Enter the number of minutes: ");
    scanf("%d", &minutes);

    // Convert minutes to seconds
    int seconds = minutes * 60;
    printf("%d minutes is equal to %d seconds.\n", minutes, seconds);

    // Convert minutes to hours
    float hours = minutes / 60.0;
    printf("%d minutes is equal to %.2f hours.\n", minutes, hours);

    return 0;
}
If/Else Statements:
1. Check Number Is Positive or Negative 
1.1. Find the Character Is Vowel or Not: 
#include <stdio.h>

int main() {
    char ch;

    // Input a character from the user
    printf("Enter a character: ");
    scanf(" %c", &ch);

    // Check if the entered character is a vowel
    if ((ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') ||
        (ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')) {
        printf("%c is a vowel.\n", ch);
    } else {
        printf("%c is not a vowel.\n", ch);
    }

    return 0;
}
1.2. Accept marks from user and check pass o r fail :
#include <stdio.h>

int main() {
    // Declare variables
    int marks;

    // Prompt the user for input
    printf("Enter the marks: ");
    scanf("%d", &marks);

    // Check if the marks are greater than or equal to 40
    if (marks >= 40) {
        printf("Congratulations! You have passed.\n");
    } else {
        printf("Sorry, you have failed.\n");
    }

    return 0;
}
1.3. C Program to Check Uppercase or Lowercase or Digit or Special Character :
#include <stdio.h>

int main() {
    char ch;

    // Read a character from the user
    printf("Enter a character: ");
    scanf("%c", &ch);

    // Check if the character is an uppercase letter
    if (ch >= 'A' && ch <= 'Z') {
        printf("%c is an Uppercase Letter.\n", ch);
    }
    // Check if the character is a lowercase letter
    else if (ch >= 'a' && ch <= 'z') {
        printf("%c is a Lowercase Letter.\n", ch);
    }
    // Check if the character is a digit
    else if (ch >= '0' && ch <= '9') {
        printf("%c is a Digit.\n", ch);
    }
    // The character is a special character
    else {
        printf("%c is a Special Character.\n", ch);
    }

    return 0;
}
1.4. to check whether a number is negative, positive or zero. :
#include <stdio.h>

int main() {
    int number;

    // Input from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Check if the number is negative, positive, or zero
    if (number > 0) {
        printf("The number is positive.\n");
    } else if (number < 0) {
        printf("The number is negative.\n");
    } else {
        printf("The number is zero.\n");
    }

    return 0;
}

2. Find the Greatest Among Three Numbers 
2.1. Find the minimum among three numbers :
#include <stdio.h>

int findMinimum(int a, int b, int c) {
    int min = a;

    if (b < min) {
        min = b;
    }

    if (c < min) {
        min = c;
    }

    return min;
}

int main() {
    int num1, num2, num3;

    printf("Enter three numbers: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    int minimum = findMinimum(num1, num2, num3);

    printf("The minimum among %d, %d, and %d is: %d\n", num1, num2, num3, minimum);

    return 0;
}


3. Checking Whether You Are Eligible for Voting or Not 
3.1. to check whether a character is in the alphabet or not.: #include <stdio.h>
#include <ctype.h>

int main() {
    char ch;

    // Input a character from the user
    printf("Enter a character: ");
    scanf("%c", &ch);

    // Check if the character is an alphabet
    if (isalpha(ch)) {
        printf("%c is an alphabet.\n", ch);
    } else {
        printf("%c is not an alphabet.\n", ch);
    }

    return 0;
}
4. Checking Number Is Even or Odd 
4.1. Your year is leap year or not :
#include <stdio.h>

int main() {
    int year;

    // Input the year
    printf("Enter a year: ");
    scanf("%d", &year);

    // Check if the year is a leap year
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        printf("%d is a leap year.\n", year);
    } else {
        printf("%d is not a leap year.\n", year);
    }

    return 0;
}
4.2. Count no. of even numbers and no. of odd number : #include <stdio.h>

int main() {
    int n, num, even_count = 0, odd_count = 0;

    printf("Enter the number of elements: ");
    scanf("%d", &n);

    printf("Enter %d numbers:\n", n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &num);

        if (num % 2 == 0) {
            even_count++;
        } else {
            odd_count++;
        }
    }

    printf("Number of even numbers: %d\n", even_count);
    printf("Number of odd numbers: %d\n", odd_count);

    return 0;
}
4.5. Find maximum in 2 variable : #include <stdio.h>

// Define the function to maximize
double f(double x, double y) {
    return -(x*x + y*y); // Example: maximizing the negative of the sum of squares
}

int main() {
    double step = 0.1; // Step size for each variable
    double max_x = 0.0, max_y = 0.0, max_value = f(0.0, 0.0);

    // Iterate through the range of values for x and y
    for (double x = -10.0; x <= 10.0; x += step) {
        for (double y = -10.0; y <= 10.0; y += step) {
            double current_value = f(x, y);

            // Update max values if a higher value is found
            if (current_value > max_value) {
                max_value = current_value;
                max_x = x;
                max_y = y;
            }
        }
    }

    // Print the result
    printf("Maximum value: %lf\n", max_value);
    printf("Values at which it occurs: x = %lf, y = %lf\n", max_x, max_y);

    return 0;
}

4.6. Find minimum in 2 variable :
#include <stdio.h>
#include <math.h>

// Define the function you want to minimize
double myFunction(double x, double y) {
    // Replace this with your actual function
    return x*x + y*y;
}

int main() {
    double min_x, min_y, min_result;
    double step = 0.01; // Adjust the step size as needed

    // Set initial values
    min_x = min_y = min_result = 1e9; // A large initial value

    // Iterate through a range of values for x and y
    for (double x = -10.0; x <= 10.0; x += step) {
        for (double y = -10.0; y <= 10.0; y += step) {
            double result = myFunction(x, y);

            // Update minimum values if a smaller result is found
            if (result < min_result) {
                min_x = x;
                min_y = y;
                min_result = result;
            }
        }
    }

    // Print the result
    printf("Minimum at (%.2f, %.2f) with value %.2f\n", min_x, min_y, min_result);

    return 0;
}

5. Given Date Month and the Year Is Correct or Not Using If-Else

5.1. to input the week number and print week day. :

#include <stdio.h>
#include <time.h>

int main() {
    int weekNumber;

    // Input week number from user
    printf("Enter week number (1-52): ");
    scanf("%d", &weekNumber);

    // Check if the entered week number is valid
    if (weekNumber < 1 || weekNumber > 52) {
        printf("Invalid week number. Please enter a number between 1 and 52.\n");
        return 1; // Exit with an error code
    }

    // Calculate the date of the first day of the week using January 1st as a reference
    time_t currentTime;
    struct tm *timeInfo;

    time(&currentTime);
    timeInfo = localtime(&currentTime);

    // Calculate the date of the first day of the entered week
    timeInfo->tm_mday += (weekNumber - 1) * 7 - timeInfo->tm_wday;

    // Convert the time structure back to a time_t object
    currentTime = mktime(timeInfo);

    // Print the weekday of the first day of the week
    printf("Week %d starts on: ", weekNumber);
    printf(asctime(timeInfo));

    return 0; // Exit successfully
}
LOOPS:

(1.)C Program to Reverse a Number Using FOR Loop:


(.a) Accept 10 number using for loop and check no. of even numbers and odd numbers:
#include <stdio.h>

int main() {
    int number, evenCount = 0, oddCount = 0;

    printf("Enter 10 numbers:\n");

    for (int i = 0; i < 10; i++) {
        printf("Enter number %d: ", i + 1);
        scanf("%d", &number);

        // Check if the number is even or odd
        if (number % 2 == 0) {
            evenCount++;
        } else {
            oddCount++;
        }
    }

    printf("\nNumber of even numbers: %d\n", evenCount);
    printf("Number of odd numbers: %d\n", oddCount);

    return 0;
}


b. Accept 5 names from user at run time: #include <stdio.h>

int main() {
    // Declare an array of strings to store names
    char names[5][50]; // Assuming each name has a maximum length of 50 characters

    // Accept 5 names from the user
    printf("Enter 5 names, one at a time:\n");

    for (int i = 0; i < 5; ++i) {
        printf("Enter name %d: ", i + 1);
        scanf("%s", names[i]);
    }

    // Display the entered names
    printf("\nEntered names:\n");
    for (int i = 0; i < 5; ++i) {
        printf("%d. %s\n", i + 1, names[i]);
    }

    return 0;
}

