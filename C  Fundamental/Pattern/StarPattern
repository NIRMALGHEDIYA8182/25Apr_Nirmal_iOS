PATTERNS:
(1.)	Display below pattern using for loop
 1 2 3 4 5 6 7 8 9 10
 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30
ANS:
#include <stdio.h>

int main() {
    int rows = 3;
    int columns = 10;
    int count = 1;

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < columns; j++) {
            printf("%02d ", count);
            count++;
        }
        printf("\n");
    }

    return 0;
}
(2.)
    *  
   * *  
  * * *  
 * * * *  
* * * * *  
 * * * *  
  * * *  
   * *  
    *  
ANS-(Swift Language)
 for i in 1...5{
    for k in stride(from: 5, to: i, by: -1) {
        print(terminator : " ")
    }

    for j in 1...i{
        print("*",terminator : " ")
    }
    print(" ")
}
for i in stride(from: 5, to: 0, by: -1){
    for k in stride(from: 5, to: i-1, by: -1) {
        print(terminator : " ")
    }
        for j in stride(from: 1, to: i, by: 1){
           print("*",terminator : " ")
    }
  print(" ")
}
(3.) 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
     *  
    * *  
   * * *  
  * * * *  
 * * * * *
ANS: for i in 1...5
{
a  for _ in 1...i
  {
    print(terminator: " ")
  }
  for _ in stride(from: i, to: 6, by: 1)
  {
    print("*",terminator : " ")
  }
  print("")
}
for i in 1...5
{
    for _ in stride(from: 6, to: i, by: -1) 
    {
        print(terminator : " ")
    }

    for _ in 1...i
    {
        print("*",terminator : " ")
    }
    print(" ")
}

(4.) 
                *
               * *
              * * *
             * * * *
            * * * * *
ANS: for i in 1...5
{
    for _ in stride(from: 5, to: i, by: -1) 
    {
        print(terminator : " ")
    }

    for _ in 1...i
    {
        print("*",terminator : " ")
    }
    print(" ")
}

(5.)
* * * * *   |   1 2 3 4 5   |   A B C D E
*       *   |   1       5   |   A       E
*       *   |   1       5   |   A       E
*       *   |   1       5   |   A       E
* * * * *   |   1 2 3 4 5   |   A B C D E
ANS:(C Language)
#include <stdio.h> 
  
int main() 
{ 
    int rows = 5; 
  
    // outer loop to iterator through each row 
    for (int i = 0; i < rows; i++) { 
  
        // inner loop to print * star in each row 
        for (int j = 0; j < rows; j++) { 
            // statement to check boundry condition 
            if (i > 0 && i < rows - 1 && j > 0 
                && j < rows - 1) { 
                printf("  "); 
            } 
            else { 
                printf("* "); 
            } 
        } 
        printf("\n"); 
    } 
    return 0; 
}
(6.)
        *           
      *   *         
    *       *       
  *           *     
*               *   
  *           *     
    *       *       
      *   *         
        *     
ANS:
#include <stdio.h> 
int main() 
{ 
    int n = 5; 
  
    // first outer loop to iterator through each row 
    for (int i = 0; i < 2 * n - 1; i++) { 
        // assigning values to the comparator according to 
        // the row number 
        int comp; 
        if (i < n) { 
            comp = 2 * (n - i) - 1; 
        } 
        else { 
            comp = 2 * (i - n + 1) + 1; 
        } 
  
        // first inner loop to print leading whitespaces 
        for (int j = 0; j < comp; j++) { 
            printf(" "); 
        } 
  
        // second inner loop to print star * and inner 
        // whitespaces 
        for (int k = 0; k < 2 * n - comp; k++) { 
            if (k == 0 || k == 2 * n - comp - 1) { 
                printf("* "); 
            } 
            else { 
                printf("  "); 
            } 
        } 
        printf("\n"); 
    } 
    return 0; 
}
(7.) 
* * * * * * * * *   |   1 2 3 4 5 6 7 8 9    |   A B C D E F G H I
  *           *     |     1           7      |     A           G
    *       *       |       1       5        |       A       E
      *   *         |         1   3          |         A   C
        *           |           1            |           A
      *   *         |         1   3          |         A   C
    *       *       |       1       5        |       A       E
  *           *     |     1           7      |     A           G
* * * * * * * * *   |   1 2 3 4 5 6 7 8 9    |   A B C D E F G H I
ANS:
#include <stdio.h> 
int main() 
{ 
    int n = 5; 
  
    // first outer loop to iterate through each row 
    for (int i = 0; i < 2 * n - 1; i++) { 
  
        // assigning comparator 
        int comp; 
        if (i < n) { 
            comp = 2 * i + 1; 
        } 
        else { 
            comp = 2 * (2 * n - i) - 3; 
        } 
  
        // first inner loop to print leading whitespaces 
        for (int j = 0; j < comp; j++) { 
            printf(" "); 
        } 
  
        // second inner loop to print star * and inner 
        // whitespaces 
        for (int k = 0; k < 2 * n - comp; k++) { 
            if (k == 0 || k == 2 * n - comp - 1 || i == 0 
                || i == 2 * n - 2) { 
                printf("* "); 
            } 
            else { 
                printf("  "); 
            } 
        } 
        printf("\n"); 
    } 
    return 0; 
}

